pipeline {
    agent any

    stages {
        stage('Clone') {
            steps {
                git url: 'https://github.com/panwars186/customer-churn-predictor.git', branch: 'main'
                echo 'Cloning repository...'
            }
        }
        stage('Install Dependencies') {
            steps {
                bat 'pip install -r requirements.txt'
                echo 'Installing dependencies...'
            }
        }
        stage('Run Migrations (for test database)') {
            steps {
                bat 'python manage.py makemigrations --noinput'
                bat 'python manage.py migrate --noinput'
            }
        }
        stage('Run Tests') {
            steps {
                bat 'python manage.py test myapp'
            }
        }
        stage('Run Application (for demonstration/integration test)') {
            steps {
                bat 'nohup python manage.py runserver 0.0.0.0:8000 > django_app.log 2>&1 &'
                bat 'sleep 10'
                bat 'curl -v http://localhost:8000/'
                bat 'echo "Django app started. Check console output for URL and curl output."'
            }
        }
    }
    post {
        always {
            echo 'Pipeline finished.'
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
        unstable {
            echo 'Pipeline is unstable. Check logs for details.'
        }
        changed {
            echo 'Pipeline state has changed. Check logs for details.'
        }
    }
}